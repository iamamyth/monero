name: ci/gh-actions/cli

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**/README.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '**/README.md'

# The below variables reduce repetitions across similar targets
env:
  REMOVE_BUNDLED_PACKAGES: 'sudo mv /usr/local /usr/extlocal && sudo mkdir /usr/local && sudo chown --reference=/usr/extlocal /usr/local && sudo chmod --reference=/usr/extlocal /usr/local'
  # ARCH="default" (not "native") ensures, that a different execution host can execute binaries compiled elsewhere.
  BUILD_DEFAULT_LINUX: 'cmake -S . -B build -D ARCH="default" -D BUILD_TESTS=ON -D CMAKE_BUILD_TYPE=Release && cmake --build build --target all && cmake --build build --target wallet_api'
  APT_INSTALL_LINUX: 'apt -y install build-essential cmake libboost-all-dev miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libusb-1.0-0-dev libprotobuf-dev protobuf-compiler ccache git'
  APT_SET_CONF: |
    tee -a /etc/apt/apt.conf.d/80-custom << EOF
    Acquire::Retries "3";
    Acquire::http::Timeout "120";
    Acquire::ftp::Timeout "120";
    EOF
  CCACHE_SETTINGS: |
    ccache --max-size=150M
    ccache --set-config=compression=true
  USE_DEVICE_TREZOR_MANDATORY: ON

jobs:
  test-ubuntu:
    name: "${{ matrix.name }} (tests)"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: Ubuntu 20.04
            container: ubuntu:20.04
    container:
      image: ${{ matrix.container }}
      env:
        DEBIAN_FRONTEND: noninteractive
        CCACHE_TEMPDIR: /tmp/.ccache-temp
        CCACHE_DIR: ~/.ccache
      # Setting up a loop device (losetup) requires additional capabilities.
      # tests/create_test_disks.sh
      options: --privileged
    steps:
      - name: set apt conf
        run: ${{env.APT_SET_CONF}}
      - name: update apt
        run: apt update
      - name: install monero dependencies
        run: ${{env.APT_INSTALL_LINUX}}
      - name: install pip
        run: apt install -y python3-pip
      - name: install Python dependencies
        run: pip install requests psutil monotonic zmq deepdiff
      - name: configure git
        run: git config --global --add safe.directory '*'
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ matrix.container }}-build-${{ github.sha }}
          restore-keys: ccache-${{ matrix.container }}-build-
      # - name: create dummy disk drives for testing
      #   run: tests/create_test_disks.sh >> $GITHUB_ENV
      - uses: ./.github/actions/set-make-job-count
      - name: tests
        env:
          CTEST_OUTPUT_ON_FAILURE: ON
          DNS_PUBLIC: tcp://9.9.9.9
          CMAKE_BUILD_PARALLEL_LEVEL: ${{env.MAKE_JOB_COUNT}}
        run: |
          ${{env.CCACHE_SETTINGS}}
          ./tests/bisect_p2p.sh
