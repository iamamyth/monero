#!/bin/bash

set -e

check_bounds=1
bad=8d60021377fbaeefc9663dee7f9cab4f51dcca42
good=ce03288ae10a6cb0ebdf30937a53e9493e85985e

echo_err() {
    echo "$@" >&2
}

src=$(realpath -e "$(dirname "$0")/..")
ftest_src="$src/tests/functional_tests"
build="$src/build"

# The functional test driver (tests/functional_tests/functional_tests_rpc.py)
# requires this temporary storage directory to exist, and it's ignored by
# git, so use it for temporaries generated by this script, too.
tmpdir="$build/tests/functional_tests"
mkdir -p "$tmpdir"

p2p_test="$tmpdir/p2p.py"
cp "$ftest_src/p2p.py" "$p2p_test"
python3=$(which python3)
test="$tmpdir/check_p2p.sh"
tee "$test" >/dev/null <<EOF
#!/bin/bash
set -e

git submodule update --init
cd "$src"
# Building these utilities wastes time
sed -i -E 's/add_subdirectory\((blockchain_utilities|gen_multisig|gen_ssl_cert|simplewallet)\)//' src/CMakeLists.txt
cmake -S . -B build -D ARCH="default" -D CMAKE_BUILD_TYPE=Release -D USE_DEVICE_TREZOR=OFF && cmake --build build --target all
cp "$p2p_test" "$ftest_src/p2p.py"
rc=0
for (( i=0; i<25; i++ )); do
    echo "[\$(date -u '+%Y-%m-%d %H:%M:%S')] starting iteration \$i"
    rm -rf "$build/functional-tests-directory"
    if ! "$python3" "$ftest_src/functional_tests_rpc.py" "$python3" "$ftest_src" "$build" p2p; then
        rc=1
        break
    fi
done
git checkout -- src/CMakeLists.txt "$ftest_src/p2p.py"
exit \$rc
EOF
chmod +x "$test"

if [[ "$check_bounds" ]]; then
    git checkout $bad
    git bisect start
    if ! "$test"; then
        git bisect bad
    else
        echo_err "Known-bad revision passed test suite"
        exit 1
    fi

    git checkout $good
    if "$test"; then
        git bisect good
    else
        echo_err "Good revision failed test suite"
        exit 1
    fi
    git bisect good
else
    git bisect start $bad $good
fi

git bisect run "$test"
git bisect log
